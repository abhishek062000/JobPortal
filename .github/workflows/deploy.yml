name: Push the Docker image to AWS ECR Repo and Deploy

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

permissions:
  id-token: write
  contents: read

jobs:
  Build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'develop' || 'develop' }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_GITHUB_ROLE }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Get commit hash
        id: get-commit-hash
        run: echo "commit-hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
  
      - name: Get timestamp
        id: get-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV
  
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ vars.REPO_NAME }}
            IMAGE_TAG: ${{ env.commit-hash }}-${{ env.timestamp }}
        run: |
            # Build the image with a unique tag
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            # Tag the image as latest
            docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
            # Push both the unique tag and the latest tag
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      # Add a step to deploy the latest image if needed
      - name: Deploy to ECS
        run: |
          # Here you can add your deployment commands to ECS
          # For example, you can use AWS CLI to update the ECS service to use the latest image
          aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment
